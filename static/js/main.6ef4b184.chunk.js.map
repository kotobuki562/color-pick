{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,EA3BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAElDC,EAAMP,EAAIQ,KAAK,KAEfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAOrB,OANAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAEF,0BACES,UAAS,gBAAWZ,EAAQ,IAAM,eAClCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IALlC,UAQE,oBAAGK,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IAC3BJ,GAAS,mBAAGS,UAAU,QAAb,qC,gBC4BDO,MAhDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,IAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAeb,OACE,qCACE,0BAASf,UAAU,YAAnB,UACE,iDACA,uBAAMgB,SAdS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,GACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,KAOV,UACE,uBACEY,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACnCG,YAAY,UACZ1B,UAAS,UAAKU,EAAQ,QAAU,QAElC,wBAAQV,UAAU,MAAMsB,KAAK,UAA7B,0BAKJ,yBAAStB,UAAU,SAAnB,SACGc,EAAKa,KAAI,SAACnB,EAAOpB,GAChB,OACE,cAAC,EAAD,2BAEMoB,GAFN,IAGEpB,MAAOA,EACPC,SAAUmB,EAAM9B,MAHXU,YCpCnBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ef4b184.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(true);\n  const bcg = rgb.join(\",\");\n  const hex = rgbToHex(...rgb);\n  const hexValue = `#${hexColor}`;\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n  return (\n    <article\n      className={`color ${index > 20 && \"color-light\"}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hexValue);\n      }}\n    >\n      <p className=\"present-value\">{weight}%</p>\n      <p className=\"color-value\">{hexValue}</p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values(\"#f15025\").all(5));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(5);\n      setList(colors);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder=\"#72baac\"\n            className={`${error ? \"error\" : null}`}\n          />\n          <button className=\"btn\" type=\"subumit\">\n            submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return (\n            <SingleColor\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}